name: Continuous deployment

on:
  push:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint-python:
    name: Lint Python code
    runs-on: ubuntu-latest
    steps:
      - id: checkout
        name: Checkout
        uses: actions/checkout@v4

      - id: ruff
        name: Ruff
        uses: chartboost/ruff-action@v1

  mypy-python:
    name: Static-types check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - id: setup-python
        name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - id: install-python-dependencies
        name: Install Python dependencies
        run: pip install mypy types-requests types-python-dateutil
        shell: bash

      - id: mypy
        name: Run mypy
        run: mypy ./cpi --ignore-missing-imports
        shell: bash

  test-python:
    strategy:
      matrix:
        python: ['3.9', '3.10', '3.11', '3.12']
    name: "Test: pip"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - id: install-python
        name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - id: install-python-dependencies
        name: Install Python dependencies
        run: pip install requests click python-dateutil pandas pytest pytest-cov pytest-xdist

      - id: download-data
        name: Download data
        run: python -c 'import cpi'

      - id: tests
        name: Run tests
        run: pytest -n auto --cov=cpi --cov-report term-missing tests

      - id: update
        name: Update data
        run: python -c 'import cpi; cpi.update()'

  test-conda:
    strategy:
      matrix:
        python: ['3.9', '3.10', '3.11', '3.12']
    name: "Test: conda"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - id: install-python
        name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - id: install-python-dependencies
        name: Install Python dependencies
        run: |
          $CONDA/bin/conda create -n cpi python=${{ matrix.python }}
          $CONDA/bin/conda install -n cpi requests click python-dateutil pandas pytest pytest-cov pytest-xdist

      - id: download-data
        name: Download data
        run: $CONDA/bin/conda run -n cpi python -c 'import cpi'

      - id: tests
        name: Run tests
        run: $CONDA/bin/conda run -n cpi pytest -n auto --cov=cpi --cov-report term-missing tests

      - id: update
        name: Update data
        run: $CONDA/bin/conda run -n cpi python -c 'import cpi; cpi.update()'

  test-build:
    name: Build Python package
    runs-on: ubuntu-latest
    needs: [test-python, test-conda, lint-python, mypy-python]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - id: install-python
        name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - id: install-python-dependencies
        name: Install Python dependencies
        run: pip install requests click python-dateutil pandas twine setuptools-scm wheel
        shell: bash

      - id: create-db
        name: Create database
        run: python -c 'import cpi'
        shell: bash

      - id: build
        name: Build release
        run: |
          python setup.py sdist
          python setup.py bdist_wheel
          ls -l dist
        shell: bash

      - id: check
        name: Check release
        run: twine check dist/*
        shell: bash

      - id: save
        name: Save artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ github.run_number }}
          path: ./dist
          if-no-files-found: error

  tag-release:
    name: Tagged PyPI release
    runs-on: ubuntu-latest
    needs: [test-build]
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    steps:
      - id: fetch
        name: Fetch artifact
        uses: actions/download-artifact@v4
        with:
          name: build-${{ github.run_number }}
          path: ./dist

      - id: publish
        name: Publish release
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          verbose: true
          verify_metadata: false
